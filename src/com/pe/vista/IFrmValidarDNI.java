/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pe.vista;

import com.pe.controlador.OnpeFBIDAO;
import com.pe.extras.Mensajes;
import com.pe.extras.export_excel;
import com.pe.modelo.OnpeFBI;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import javafx.scene.control.ProgressBar;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.JTable;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;

/**
 *
 * @author JUAN
 */
public class IFrmValidarDNI extends javax.swing.JInternalFrame {

    private JFileChooser FileChooser = new JFileChooser();
    private Vector columna = new Vector();
    private Vector filas = new Vector();
    private static int tabla_ancho = 0;
    private static int tabla_alto = 0;
    private static DefaultTableModel modelo;
    private static DefaultTableModel modelo1;
    private Timer t;
    private ActionListener al;
    Workbook wb;

    OnpeFBIDAO daoOnpe;

    public IFrmValidarDNI() {
        initComponents();
        btnGenerarReporte.setEnabled(false);
        Mensajes.centerComponent(this);
        modelo = new DefaultTableModel();
        modelo.addColumn("DNI");
        this.tblDNI.setModel(modelo);
        ValidarTabla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDNI = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        btnArchivo = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblcontenido = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        btnGenerarReporte = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        pbarProcesando = new javax.swing.JProgressBar();

        setClosable(true);
        setIconifiable(true);
        setTitle("Filtro RENIEC");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Filtro RENIEC");

        tblDNI.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblDNI);

        btnArchivo.setText("AgregarArchivo");
        btnArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArchivoActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tblcontenido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblcontenido);

        btnGenerarReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ic_excel2.png"))); // NOI18N
        btnGenerarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarReporteActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        pbarProcesando.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        pbarProcesando.setToolTipText("");
        pbarProcesando.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cargando", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnArchivo)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnBuscar)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(pbarProcesando, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnGenerarReporte, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 19, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNuevo)
                        .addGap(30, 30, 30))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnNuevo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(btnArchivo)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnGenerarReporte)
                                    .addComponent(pbarProcesando, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 6, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(btnBuscar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArchivoActionPerformed
        // TODO add your handling code here:
        FileChooser.showDialog(null, "Importar Hoja ");
        File file = FileChooser.getSelectedFile();
        if (!file.getName().endsWith("xls")) {

            JOptionPane.showMessageDialog(null, "Seleccione un archivo excel...", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                CrearTabla(file);
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(IFrmValidarDNI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnArchivoActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        if (tblDNI.getRowCount() > 0) {
            barra();
        } else {
            Mensajes.msjError("Tabla Vacia");
        }


    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnGenerarReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarReporteActionPerformed
        // TODO add your handling code here:
        JFileChooser dialog = new JFileChooser();
        int opcion = dialog.showSaveDialog(IFrmValidarDNI.this);

        if (opcion == JFileChooser.APPROVE_OPTION) {

            File dir = dialog.getSelectedFile();

            try {
                List<JTable> tb = new ArrayList<JTable>();
                tb.add(tblcontenido);
                //-------------------
                export_excel excelExporter = new export_excel(tb, new File(dir.getAbsolutePath() + ".xls"));
                if (excelExporter.exportBusquedaDNI()) {
                    JOptionPane.showMessageDialog(null, "TABLAS EXPORTADOS CON EXITOS!");
                    btnArchivo.setEnabled(true);
                    btnBuscar.setEnabled(false);
                    btnGenerarReporte.setEnabled(false);

                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnGenerarReporteActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        NuevaBusqueda();
    }//GEN-LAST:event_btnNuevoActionPerformed

    public void CrearTabla(File file) throws IOException {

        Workbook workbook = null;

        try {
            workbook = Workbook.getWorkbook(file);

            Sheet sheet = workbook.getSheet(0);
            columna.clear();

            for (int i = 0; i < sheet.getColumns(); i++) {
                Cell cell1 = sheet.getCell(i, 0);
                columna.add(cell1.getContents());
            }
            filas.clear();

            for (int j = 1; j < sheet.getRows(); j++) {

                Vector d = new Vector();

                for (int i = 0; i < sheet.getColumns(); i++) {

                    Cell cell = sheet.getCell(i, j);
                    d.add(cell.getContents());
                }
                d.add("\n");
                //filas.add(d);
                modelo.addRow(d);
                ValidarTabla();
                FormatoTablaDNI();
            }

        } catch (BiffException e) {
            e.printStackTrace();
        }
    }

    public void barra() {
        pbarProcesando.setVisible(true);
        pbarProcesando.setIndeterminate(true);

        try {
            //Ponemos a "Dormir" el programa durante los ms que queremos
            Thread.sleep(5 * 1000);
            
            Busqueda(tblDNI);
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void Busqueda(JTable tabla) {
        modelo1 = new DefaultTableModel();
        modelo1.addColumn("DNI");
        modelo1.addColumn("NOMBRES");
        modelo1.addColumn("EDAD");
        daoOnpe = new OnpeFBIDAO();
        OnpeFBI vo = new OnpeFBI();
        String dni = null;
        ArrayList<OnpeFBI> list;
        for (int k = 0; k < tblDNI.getRowCount(); k++) {

            dni = tblDNI.getValueAt(k, 0).toString();
            System.out.println("recorriendo la tabla:" + dni);
            list = daoOnpe.BusquedaXDNI(dni);
            tblcontenido.setModel(modelo1);

            if (list.size() > 0) {
                for (int i = 0; i < list.size(); i++) {
                    Object fila[] = new Object[4];
                    vo = list.get(i);
                    fila[0] = vo.getNUMERO_DOCUMENTO();
                    fila[1] = vo.getAPELLIDO_PATERNO();
                    fila[2] = vo.getNUMERO_MESA();
                    modelo1.addRow(fila);

                }

            }

        }
        btnBuscar.setEnabled(false);

        btnGenerarReporte.setEnabled(true);
        FormatoDatos();
        Mensajes.msjMuestra("Termino la Busqueda");
    }

    private void ValidarTabla() {
        pbarProcesando.setVisible(false);
        if (tblDNI.getRowCount() > 0) {
            btnBuscar.setEnabled(true);
        } else {
            btnBuscar.setEnabled(false);
        }
    }

    private void FormatoTablaDNI() {
        tblDNI.setSelectionBackground(Color.GRAY);
        tblDNI.setIntercellSpacing(new Dimension(1, 1));
        tblDNI.setRowMargin(1);
        tblDNI.setOpaque(false);

    }

    private void FormatoDatos() {
        tblcontenido.getColumnModel().getColumn(0).setPreferredWidth(150);
        tblcontenido.getColumnModel().getColumn(1).setPreferredWidth(750);
        tblcontenido.getColumnModel().getColumn(2).setPreferredWidth(80);
        tblcontenido.setSelectionBackground(Color.yellow);
        tblcontenido.setSelectionForeground(Color.BLACK);
        tblcontenido.setIntercellSpacing(new Dimension(1, 1));
        tblcontenido.setRowMargin(1);
        tblcontenido.setOpaque(false);

    }

    private void NuevaBusqueda() {
        btnArchivo.setEnabled(true);
        btnBuscar.setEnabled(false);
        btnGenerarReporte.setEnabled(false);
        DefaultTableModel model = (DefaultTableModel) tblDNI.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
        DefaultTableModel model1 = (DefaultTableModel) tblcontenido.getModel();
        while (model1.getRowCount() > 0) {
            model1.removeRow(0);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnArchivo;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGenerarReporte;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    public javax.swing.JProgressBar pbarProcesando;
    public javax.swing.JTable tblDNI;
    public javax.swing.JTable tblcontenido;
    // End of variables declaration//GEN-END:variables

}
